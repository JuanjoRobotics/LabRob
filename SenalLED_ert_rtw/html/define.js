function CodeDefine() { 
this.def = new Array();
this.def["IsrOverrun"] = {file: "ert_main_c.html",line:23,type:"var"};
this.def["ert_main.c:OverrunFlag"] = {file: "ert_main_c.html",line:24,type:"var"};
this.def["rt_OneStep"] = {file: "ert_main_c.html",line:25,type:"fcn"};
this.def["stopRequested"] = {file: "ert_main_c.html",line:52,type:"var"};
this.def["runModel"] = {file: "ert_main_c.html",line:53,type:"var"};
this.def["main"] = {file: "ert_main_c.html",line:54,type:"fcn"};
this.def["SenalLED_B"] = {file: "SenalLED_c.html",line:32,type:"var"};
this.def["SenalLED_DW"] = {file: "SenalLED_c.html",line:35,type:"var"};
this.def["SenalLED.c:SenalLED_M_"] = {file: "SenalLED_c.html",line:38,type:"var"};
this.def["SenalLED_M"] = {file: "SenalLED_c.html",line:39,type:"var"};
this.def["div_repeat_s32_floor"] = {file: "SenalLED_c.html",line:41,type:"fcn"};
this.def["div_nzp_repeat_u32_ceiling"] = {file: "SenalLED_c.html",line:68,type:"fcn"};
this.def["div_nzp_repeat_u32"] = {file: "SenalLED_c.html",line:93,type:"fcn"};
this.def["SenalLED.c:rate_scheduler"] = {file: "SenalLED_c.html",line:119,type:"fcn"};
this.def["SenalLED_step"] = {file: "SenalLED_c.html",line:158,type:"fcn"};
this.def["SenalLED_initialize"] = {file: "SenalLED_c.html",line:768,type:"fcn"};
this.def["SenalLED_terminate"] = {file: "SenalLED_c.html",line:967,type:"fcn"};
this.def["B_SenalLED_T"] = {file: "SenalLED_h.html",line:72,type:"type"};
this.def["DW_SenalLED_T"] = {file: "SenalLED_h.html",line:100,type:"type"};
this.def["b_arduinodriver_ArduinoDigita_T"] = {file: "SenalLED_types_h.html",line:38,type:"type"};
this.def["codertarget_arduinobase_block_T"] = {file: "SenalLED_types_h.html",line:58,type:"type"};
this.def["c_arduinodriver_ArduinoSerial_T"] = {file: "SenalLED_types_h.html",line:77,type:"type"};
this.def["codertarget_arduinobase_inter_T"] = {file: "SenalLED_types_h.html",line:100,type:"type"};
this.def["codertarget_arduinobase_int_a_T"] = {file: "SenalLED_types_h.html",line:121,type:"type"};
this.def["P_SenalLED_T"] = {file: "SenalLED_types_h.html",line:126,type:"type"};
this.def["RT_MODEL_SenalLED_T"] = {file: "SenalLED_types_h.html",line:129,type:"type"};
this.def["SenalLED_P"] = {file: "SenalLED_data_c.html",line:24,type:"var"};
this.def["rtGetInf"] = {file: "rtGetInf_c.html",line:31,type:"fcn"};
this.def["rtGetInfF"] = {file: "rtGetInf_c.html",line:55,type:"fcn"};
this.def["rtGetMinusInf"] = {file: "rtGetInf_c.html",line:66,type:"fcn"};
this.def["rtGetMinusInfF"] = {file: "rtGetInf_c.html",line:90,type:"fcn"};
this.def["rtGetNaN"] = {file: "rtGetNaN_c.html",line:31,type:"fcn"};
this.def["rtGetNaNF"] = {file: "rtGetNaN_c.html",line:55,type:"fcn"};
this.def["rtInf"] = {file: "rt_nonfinite_c.html",line:30,type:"var"};
this.def["rtMinusInf"] = {file: "rt_nonfinite_c.html",line:31,type:"var"};
this.def["rtNaN"] = {file: "rt_nonfinite_c.html",line:32,type:"var"};
this.def["rtInfF"] = {file: "rt_nonfinite_c.html",line:33,type:"var"};
this.def["rtMinusInfF"] = {file: "rt_nonfinite_c.html",line:34,type:"var"};
this.def["rtNaNF"] = {file: "rt_nonfinite_c.html",line:35,type:"var"};
this.def["rt_InitInfAndNaN"] = {file: "rt_nonfinite_c.html",line:41,type:"fcn"};
this.def["rtIsInf"] = {file: "rt_nonfinite_c.html",line:53,type:"fcn"};
this.def["rtIsInfF"] = {file: "rt_nonfinite_c.html",line:59,type:"fcn"};
this.def["rtIsNaN"] = {file: "rt_nonfinite_c.html",line:65,type:"fcn"};
this.def["rtIsNaNF"] = {file: "rt_nonfinite_c.html",line:87,type:"fcn"};
this.def["BigEndianIEEEDouble"] = {file: "rt_nonfinite_h.html",line:41,type:"type"};
this.def["LittleEndianIEEEDouble"] = {file: "rt_nonfinite_h.html",line:48,type:"type"};
this.def["IEEESingle"] = {file: "rt_nonfinite_h.html",line:55,type:"type"};
this.def["int8_T"] = {file: "rtwtypes_h.html",line:51,type:"type"};
this.def["uint8_T"] = {file: "rtwtypes_h.html",line:52,type:"type"};
this.def["int16_T"] = {file: "rtwtypes_h.html",line:53,type:"type"};
this.def["uint16_T"] = {file: "rtwtypes_h.html",line:54,type:"type"};
this.def["int32_T"] = {file: "rtwtypes_h.html",line:55,type:"type"};
this.def["uint32_T"] = {file: "rtwtypes_h.html",line:56,type:"type"};
this.def["real32_T"] = {file: "rtwtypes_h.html",line:57,type:"type"};
this.def["real64_T"] = {file: "rtwtypes_h.html",line:58,type:"type"};
this.def["real_T"] = {file: "rtwtypes_h.html",line:64,type:"type"};
this.def["time_T"] = {file: "rtwtypes_h.html",line:65,type:"type"};
this.def["boolean_T"] = {file: "rtwtypes_h.html",line:66,type:"type"};
this.def["int_T"] = {file: "rtwtypes_h.html",line:67,type:"type"};
this.def["uint_T"] = {file: "rtwtypes_h.html",line:68,type:"type"};
this.def["ulong_T"] = {file: "rtwtypes_h.html",line:69,type:"type"};
this.def["char_T"] = {file: "rtwtypes_h.html",line:70,type:"type"};
this.def["uchar_T"] = {file: "rtwtypes_h.html",line:71,type:"type"};
this.def["byte_T"] = {file: "rtwtypes_h.html",line:72,type:"type"};
this.def["creal32_T"] = {file: "rtwtypes_h.html",line:82,type:"type"};
this.def["creal64_T"] = {file: "rtwtypes_h.html",line:87,type:"type"};
this.def["creal_T"] = {file: "rtwtypes_h.html",line:92,type:"type"};
this.def["cint8_T"] = {file: "rtwtypes_h.html",line:99,type:"type"};
this.def["cuint8_T"] = {file: "rtwtypes_h.html",line:106,type:"type"};
this.def["cint16_T"] = {file: "rtwtypes_h.html",line:113,type:"type"};
this.def["cuint16_T"] = {file: "rtwtypes_h.html",line:120,type:"type"};
this.def["cint32_T"] = {file: "rtwtypes_h.html",line:127,type:"type"};
this.def["cuint32_T"] = {file: "rtwtypes_h.html",line:134,type:"type"};
this.def["pointer_T"] = {file: "rtwtypes_h.html",line:152,type:"type"};
this.def["Encoder"] = {file: "MisEncoderss_wrapper_c.html",line:22,type:"type"};
this.def["Enc"] = {file: "MisEncoderss_wrapper_c.html",line:23,type:"var"};
this.def["getIntNum"] = {file: "MisEncoderss_wrapper_c.html",line:26,type:"fcn"};
this.def["irsPinAEn0"] = {file: "MisEncoderss_wrapper_c.html",line:45,type:"fcn"};
this.def["isrPinBEn0"] = {file: "MisEncoderss_wrapper_c.html",line:77,type:"fcn"};
this.def["irsPinAEn1"] = {file: "MisEncoderss_wrapper_c.html",line:108,type:"fcn"};
this.def["isrPinBEn1"] = {file: "MisEncoderss_wrapper_c.html",line:140,type:"fcn"};
this.def["MisEncoderss_Outputs_wrapper"] = {file: "MisEncoderss_wrapper_c.html",line:186,type:"fcn"};
this.def["MisEncoderss_Update_wrapper"] = {file: "MisEncoderss_wrapper_c.html",line:214,type:"fcn"};
this.def["PeripheralHandleMapType"] = {file: "ArduinoPinHandleMap_cpp.html",line:10,type:"type"};
this.def["analogPinHandleMap"] = {file: "ArduinoPinHandleMap_cpp.html",line:11,type:"fcn"};
this.def["PWMPinHandleMap"] = {file: "ArduinoPinHandleMap_cpp.html",line:12,type:"fcn"};
this.def["ssid"] = {file: "MW_ArduinoHWInit_cpp.html",line:63,type:"var"};
this.def["configureSuccess"] = {file: "MW_ArduinoHWInit_cpp.html",line:64,type:"var"};
this.def["trialcount"] = {file: "MW_ArduinoHWInit_cpp.html",line:65,type:"var"};
this.def["key"] = {file: "MW_ArduinoHWInit_cpp.html",line:68,type:"var"};
this.def["keyIndex"] = {file: "MW_ArduinoHWInit_cpp.html",line:69,type:"var"};
this.def["wpapass"] = {file: "MW_ArduinoHWInit_cpp.html",line:73,type:"var"};
this.def["MW_Modbus_Slave_Poll"] = {file: "MW_ArduinoHWInit_cpp.html",line:80,type:"fcn"};
this.def["MW_Arduino_Init"] = {file: "MW_ArduinoHWInit_cpp.html",line:87,type:"fcn"};
this.def["MW_Arduino_Terminate"] = {file: "MW_ArduinoHWInit_cpp.html",line:247,type:"fcn"};
this.def["MW_EnableNanoCarrierBatteryCharging"] = {file: "MW_ArduinoHWInit_cpp.html",line:255,type:"fcn"};
this.def["PeripheralHandleMapType"] = {file: "MW_PWM_cpp.html",line:16,type:"type"};
this.def["MW_PWM_Open"] = {file: "MW_PWM_cpp.html",line:24,type:"fcn"};
this.def["MW_PWM_Start"] = {file: "MW_PWM_cpp.html",line:43,type:"fcn"};
this.def["MW_PWM_SetDutyCycle"] = {file: "MW_PWM_cpp.html",line:49,type:"fcn"};
this.def["MW_PWM_SetFrequency"] = {file: "MW_PWM_cpp.html",line:77,type:"fcn"};
this.def["MW_PWM_DisableNotification"] = {file: "MW_PWM_cpp.html",line:84,type:"fcn"};
this.def["MW_PWM_EnableNotification"] = {file: "MW_PWM_cpp.html",line:90,type:"fcn"};
this.def["MW_PWM_SetOutputToIdle"] = {file: "MW_PWM_cpp.html",line:97,type:"fcn"};
this.def["MW_PWM_GetOutputState"] = {file: "MW_PWM_cpp.html",line:103,type:"fcn"};
this.def["MW_PWM_Stop"] = {file: "MW_PWM_cpp.html",line:110,type:"fcn"};
this.def["MW_PWM_Close"] = {file: "MW_PWM_cpp.html",line:116,type:"fcn"};
this.def["MW_PWM_GetHandle"] = {file: "MW_PWM_cpp.html",line:133,type:"fcn"};
this.def["setPWMHandle"] = {file: "MW_PWM_cpp.html",line:167,type:"fcn"};
this.def["MW_PWMDriver.c:_writeResolution"] = {file: "MW_PWMDriver_c.html",line:20,type:"var"};
this.def["MW_PWMDriver.c:syncDAC"] = {file: "MW_PWMDriver_c.html",line:24,type:"fcn"};
this.def["MW_PWMDriver.c:syncTC_8"] = {file: "MW_PWMDriver_c.html",line:31,type:"fcn"};
this.def["MW_PWMDriver.c:syncTCC"] = {file: "MW_PWMDriver_c.html",line:37,type:"fcn"};
this.def["MW_PWMDriver.c:mapResolution"] = {file: "MW_PWMDriver_c.html",line:41,type:"fcn"};
this.def["MW_analogWrite"] = {file: "MW_PWMDriver_c.html",line:52,type:"fcn"};
this.def["MW_setAnalogFrequency"] = {file: "MW_PWMDriver_c.html",line:124,type:"fcn"};
this.def["MW_analogWrite"] = {file: "MW_PWMDriver_c.html",line:228,type:"fcn"};
this.def["MW_setAnalogFrequency"] = {file: "MW_PWMDriver_c.html",line:233,type:"fcn"};
this.def["MW_PWMDriver.c:_writeResolution"] = {file: "MW_PWMDriver_c.html",line:466,type:"var"};
this.def["MW_PWMDriver.c:PWMEnabled"] = {file: "MW_PWMDriver_c.html",line:467,type:"var"};
this.def["MW_PWMDriver.c:TCChanEnabled"] = {file: "MW_PWMDriver_c.html",line:468,type:"var"};
this.def["MW_PWMDriver.c:mapResolution"] = {file: "MW_PWMDriver_c.html",line:470,type:"fcn"};
this.def["MW_PWMDriver.c:TC_SetCMR_ChannelA"] = {file: "MW_PWMDriver_c.html",line:479,type:"fcn"};
this.def["MW_PWMDriver.c:TC_SetCMR_ChannelB"] = {file: "MW_PWMDriver_c.html",line:484,type:"fcn"};
this.def["MW_analogWrite"] = {file: "MW_PWMDriver_c.html",line:489,type:"fcn"};
this.def["MW_setAnalogFrequency"] = {file: "MW_PWMDriver_c.html",line:594,type:"fcn"};
this.def["getCurrentTime"] = {file: "MW_SerialRead_cpp.html",line:12,type:"fcn"};
this.def["BufferSize"] = {file: "MW_SerialRead_cpp.html",line:25,type:"var"};
this.def["BufferSize"] = {file: "MW_SerialRead_cpp.html",line:39,type:"var"};
this.def["BufferSize"] = {file: "MW_SerialRead_cpp.html",line:57,type:"var"};
this.def["BufferSize"] = {file: "MW_SerialRead_cpp.html",line:64,type:"var"};
this.def["BufferSize"] = {file: "MW_SerialRead_cpp.html",line:64,type:"fcn"};
this.def["BufferSize"] = {file: "MW_SerialRead_cpp.html",line:64,type:"fcn"};
this.def["BufferSize"] = {file: "MW_SerialRead_cpp.html",line:64,type:"fcn"};
this.def["BufferSize"] = {file: "MW_SerialRead_cpp.html",line:64,type:"fcn"};
this.def["BufferSize"] = {file: "MW_SerialRead_cpp.html",line:64,type:"fcn"};
this.def["BufferSize"] = {file: "MW_SerialRead_cpp.html",line:64,type:"fcn"};
this.def["BufferSize"] = {file: "MW_SerialRead_cpp.html",line:64,type:"fcn"};
this.def["BufferSize"] = {file: "MW_SerialRead_cpp.html",line:64,type:"fcn"};
this.def["DataSizeInBytes"] = {file: "MW_SerialRead_cpp.html",line:114,type:"var"};
this.def["dataSizeinBuffer"] = {file: "MW_SerialRead_cpp.html",line:128,type:"var"};
this.def["tempdatabuffer"] = {file: "MW_SerialRead_cpp.html",line:129,type:"var"};
this.def["dataSize"] = {file: "MW_SerialWrite_cpp.html",line:43,type:"var"};
this.def["counter"] = {file: "MW_SerialWrite_cpp.html",line:44,type:"var"};
this.def["base"] = {file: "MW_SerialWrite_cpp.html",line:45,type:"var"};
this.def["MATLAB_MEX_FILE"] = {file: "MW_arduino_digitalio_cpp.html",line:10,type:"fcn"};
this.def["ret"] = {file: "MW_arduino_digitalio_cpp.html",line:44,type:"var"};
this.def["getLoopbackIP"] = {file: "MW_target_hardware_resources_h.html",line:12,type:"var"};
this.def["oldtime"] = {file: "arduinoAVRScheduler_cpp.html",line:10,type:"var"};
this.def["actualtime"] = {file: "arduinoAVRScheduler_cpp.html",line:11,type:"var"};
this.def["scheduler_counter"] = {file: "arduinoAVRScheduler_cpp.html",line:16,type:"var"};
this.def["scheduler_counter"] = {file: "arduinoAVRScheduler_cpp.html",line:18,type:"var"};
this.def["scheduler_counter"] = {file: "arduinoAVRScheduler_cpp.html",line:20,type:"var"};
this.def["configureArduinoAVRTimer"] = {file: "arduinoAVRScheduler_cpp.html",line:53,type:"fcn"};
this.def["disable_rt_OneStep"] = {file: "arduinoAVRScheduler_cpp.html",line:73,type:"fcn"};
this.def["enable_rt_OneStep"] = {file: "arduinoAVRScheduler_cpp.html",line:84,type:"fcn"};
this.def["MW_Arduino_Loop"] = {file: "arduinoAVRScheduler_cpp.html",line:92,type:"fcn"};
this.def["libFcnOutput"] = {file: "io_wrappers_cpp.html",line:62,type:"var"};
this.def["_RTT_UDP_"] = {file: "io_wrappers_cpp.html",line:134,type:"var"};
this.def["mac"] = {file: "io_wrappers_cpp.html",line:136,type:"var"};
this.def["_RTT_UDP_"] = {file: "io_wrappers_cpp.html",line:137,type:"var"};
this.def["configureSuccess"] = {file: "io_wrappers_cpp.html",line:138,type:"var"};
this.def["trialcount"] = {file: "io_wrappers_cpp.html",line:139,type:"var"};
this.def["io_wrappers.cpp:only_one_ethernet_begin"] = {file: "io_wrappers_cpp.html",line:142,type:"var"};
this.def["packetSize"] = {file: "io_wrappers_cpp.html",line:214,type:"var"};
this.def["mac"] = {file: "io_wrappers_cpp.html",line:233,type:"var"};
this.def["configureSuccess"] = {file: "io_wrappers_cpp.html",line:234,type:"var"};
this.def["trialcount"] = {file: "io_wrappers_cpp.html",line:235,type:"var"};
this.def["_RTT_TCP_"] = {file: "io_wrappers_cpp.html",line:237,type:"var"};
this.def["io_wrappers.cpp:only_one_tcp_server_and_ethernet_begin"] = {file: "io_wrappers_cpp.html",line:241,type:"var"};
this.def["libFcnOutput"] = {file: "io_wrappers_cpp.html",line:316,type:"var"};
this.def["client"] = {file: "io_wrappers_cpp.html",line:317,type:"var"};
this.def["start_time"] = {file: "io_wrappers_cpp.html",line:362,type:"var"};
this.def["start_time"] = {file: "io_wrappers_cpp.html",line:372,type:"var"};
}
CodeDefine.instance = new CodeDefine();
var testHarnessInfo = {OwnerFileName: "", HarnessOwner: "", HarnessName: "", IsTestHarness: "0"};
var relPathToBuildDir = "../ert_main.c";
var fileSep = "\\";
var isPC = true;
function Html2SrcLink() {
	this.html2SrcPath = new Array;
	this.html2Root = new Array;
	this.html2SrcPath["ert_main_c.html"] = "../ert_main.c";
	this.html2Root["ert_main_c.html"] = "ert_main_c.html";
	this.html2SrcPath["SenalLED_c.html"] = "../SenalLED.c";
	this.html2Root["SenalLED_c.html"] = "SenalLED_c.html";
	this.html2SrcPath["SenalLED_h.html"] = "../SenalLED.h";
	this.html2Root["SenalLED_h.html"] = "SenalLED_h.html";
	this.html2SrcPath["SenalLED_private_h.html"] = "../SenalLED_private.h";
	this.html2Root["SenalLED_private_h.html"] = "SenalLED_private_h.html";
	this.html2SrcPath["SenalLED_types_h.html"] = "../SenalLED_types.h";
	this.html2Root["SenalLED_types_h.html"] = "SenalLED_types_h.html";
	this.html2SrcPath["SenalLED_data_c.html"] = "../SenalLED_data.c";
	this.html2Root["SenalLED_data_c.html"] = "SenalLED_data_c.html";
	this.html2SrcPath["rtGetInf_c.html"] = "../rtGetInf.c";
	this.html2Root["rtGetInf_c.html"] = "rtGetInf_c.html";
	this.html2SrcPath["rtGetInf_h.html"] = "../rtGetInf.h";
	this.html2Root["rtGetInf_h.html"] = "rtGetInf_h.html";
	this.html2SrcPath["rtGetNaN_c.html"] = "../rtGetNaN.c";
	this.html2Root["rtGetNaN_c.html"] = "rtGetNaN_c.html";
	this.html2SrcPath["rtGetNaN_h.html"] = "../rtGetNaN.h";
	this.html2Root["rtGetNaN_h.html"] = "rtGetNaN_h.html";
	this.html2SrcPath["rt_nonfinite_c.html"] = "../rt_nonfinite.c";
	this.html2Root["rt_nonfinite_c.html"] = "rt_nonfinite_c.html";
	this.html2SrcPath["rt_nonfinite_h.html"] = "../rt_nonfinite.h";
	this.html2Root["rt_nonfinite_h.html"] = "rt_nonfinite_h.html";
	this.html2SrcPath["rtwtypes_h.html"] = "../rtwtypes.h";
	this.html2Root["rtwtypes_h.html"] = "rtwtypes_h.html";
	this.html2SrcPath["MisEncoderss_wrapper_c.html"] = "../../MisEncoderss_wrapper.c";
	this.html2Root["MisEncoderss_wrapper_c.html"] = "MisEncoderss_wrapper_c.html";
	this.html2SrcPath["rtmodel_h.html"] = "../rtmodel.h";
	this.html2Root["rtmodel_h.html"] = "rtmodel_h.html";
	this.html2SrcPath["ArduinoPinHandleMap_cpp.html"] = "../../../../../../../../ProgramData/MATLAB/SupportPackages/R2020b/toolbox/target/supportpackages/arduinobase/src/ArduinoPinHandleMap.cpp";
	this.html2Root["ArduinoPinHandleMap_cpp.html"] = "ArduinoPinHandleMap_cpp.html";
	this.html2SrcPath["MW_ArduinoHWInit_cpp.html"] = "../../../../../../../../ProgramData/MATLAB/SupportPackages/R2020b/toolbox/target/supportpackages/arduinotarget/registry/../src/MW_ArduinoHWInit.cpp";
	this.html2Root["MW_ArduinoHWInit_cpp.html"] = "MW_ArduinoHWInit_cpp.html";
	this.html2SrcPath["MW_PWM_cpp.html"] = "../../../../../../../../ProgramData/MATLAB/SupportPackages/R2020b/toolbox/target/supportpackages/arduinobase/src/MW_PWM.cpp";
	this.html2Root["MW_PWM_cpp.html"] = "MW_PWM_cpp.html";
	this.html2SrcPath["MW_PWMDriver_c.html"] = "../../../../../../../../ProgramData/MATLAB/SupportPackages/R2020b/toolbox/target/supportpackages/arduinobase/src/MW_PWMDriver.c";
	this.html2Root["MW_PWMDriver_c.html"] = "MW_PWMDriver_c.html";
	this.html2SrcPath["MW_SerialRead_cpp.html"] = "../../../../../../../../ProgramData/MATLAB/SupportPackages/R2020b/toolbox/target/supportpackages/arduinobase/src/MW_SerialRead.cpp";
	this.html2Root["MW_SerialRead_cpp.html"] = "MW_SerialRead_cpp.html";
	this.html2SrcPath["MW_SerialWrite_cpp.html"] = "../../../../../../../../ProgramData/MATLAB/SupportPackages/R2020b/toolbox/target/supportpackages/arduinobase/src/MW_SerialWrite.cpp";
	this.html2Root["MW_SerialWrite_cpp.html"] = "MW_SerialWrite_cpp.html";
	this.html2SrcPath["MW_arduino_digitalio_cpp.html"] = "../../../../../../../../ProgramData/MATLAB/SupportPackages/R2020b/toolbox/target/supportpackages/arduinobase/src/MW_arduino_digitalio.cpp";
	this.html2Root["MW_arduino_digitalio_cpp.html"] = "MW_arduino_digitalio_cpp.html";
	this.html2SrcPath["MW_target_hardware_resources_h.html"] = "../MW_target_hardware_resources.h";
	this.html2Root["MW_target_hardware_resources_h.html"] = "MW_target_hardware_resources_h.html";
	this.html2SrcPath["arduinoAVRScheduler_cpp.html"] = "../../../../../../../../ProgramData/MATLAB/SupportPackages/R2020b/toolbox/target/supportpackages/arduinotarget/registry/../scheduler/src/arduinoAVRScheduler.cpp";
	this.html2Root["arduinoAVRScheduler_cpp.html"] = "arduinoAVRScheduler_cpp.html";
	this.html2SrcPath["io_wrappers_cpp.html"] = "../../../../../../../../ProgramData/MATLAB/SupportPackages/R2020b/toolbox/target/supportpackages/arduinobase/src/io_wrappers.cpp";
	this.html2Root["io_wrappers_cpp.html"] = "io_wrappers_cpp.html";
	this.getLink2Src = function (htmlFileName) {
		 if (this.html2SrcPath[htmlFileName])
			 return this.html2SrcPath[htmlFileName];
		 else
			 return null;
	}
	this.getLinkFromRoot = function (htmlFileName) {
		 if (this.html2Root[htmlFileName])
			 return this.html2Root[htmlFileName];
		 else
			 return null;
	}
}
Html2SrcLink.instance = new Html2SrcLink();
var fileList = [
"ert_main_c.html","SenalLED_c.html","SenalLED_h.html","SenalLED_private_h.html","SenalLED_types_h.html","SenalLED_data_c.html","rtGetInf_c.html","rtGetInf_h.html","rtGetNaN_c.html","rtGetNaN_h.html","rt_nonfinite_c.html","rt_nonfinite_h.html","rtwtypes_h.html","MisEncoderss_wrapper_c.html","rtmodel_h.html","ArduinoPinHandleMap_cpp.html","MW_ArduinoHWInit_cpp.html","MW_PWM_cpp.html","MW_PWMDriver_c.html","MW_SerialRead_cpp.html","MW_SerialWrite_cpp.html","MW_arduino_digitalio_cpp.html","MW_target_hardware_resources_h.html","arduinoAVRScheduler_cpp.html","io_wrappers_cpp.html"];
